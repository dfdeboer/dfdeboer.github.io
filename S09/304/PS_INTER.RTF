{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}}{\colortbl;\red0\green0\blue0;
\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;
\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\nowidctlpar\adjustright \fs20 \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}{\s15\sb240\sa120\keepn\nowidctlpar\adjustright \f1\fs28 
\sbasedon0 \snext16 Heading;}{\s16\sa120\nowidctlpar\adjustright \fs20 \sbasedon0 \snext16 Body Text;}{\s17\sa120\nowidctlpar\adjustright \fs20 \sbasedon16 \snext17 List;}{\s18\sb120\sa120\nowidctlpar\adjustright \i \sbasedon0 \snext18 caption;}{
\s19\nowidctlpar\adjustright \fs20 \sbasedon0 \snext19 Index;}{\s20\nowidctlpar\adjustright \fs16 \sbasedon0 \snext20 envelope return;}{\s21\li2880\nowidctlpar\adjustright \sbasedon0 \snext21 envelope address;}}{\info{\author Douglas F. De Boer}
{\operator Douglas F. De Boer}{\creatim\yr2008\mo2\dy7\hr8\min35}{\revtim\yr2009\mo3\dy5\hr8\min51}{\printim\yr2113\mo1\dy1}{\version2}{\edmins0}{\nofpages1}{\nofwords411}{\nofchars2346}{\*\company  }{\nofcharsws2881}{\vern113}}
\widowctrl\ftnbj\aenddoc\hyphcaps0\viewkind1\viewscale120 \fet0\sectd \sbknone\linex0\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3
\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}
{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain 
\fi-540\li540\nowidctlpar\adjustright \fs20 {Dordt College
\par Engineering 304, Microprocessor Interfacing
\par Problems on Interrupts\line 
\par 3.17 \tab }{\b Interrupt Density and Interval Constraints}{.  Consider a design which has four sources of interrupts, all of which can be active at the
 same time.  The sources are identified by numbers 1, 2, 3, and 4, with 1 representing the highest priority source and 4 the lowest.  The corresponding interrupt service routines take T\-\-}{\dn5 1}{=31, T}{\dn5 2}{=29, T}{\dn5 3}{=37, and T}{\dn5 4}{=43 
\'b5s, respectively.  The minimum time between interrupts from the same source is TP}{\dn5 1}{=120, TP}{\dn5 2}{=200, TP}{\dn5 3}{=150, TP}{\dn5 4}{=1000 \'b5
s, respectively.  For reliable operation, each source must be serviced before its next interrupt occurs.  
\par }\pard \nowidctlpar\adjustright {
\par }\pard \fi-360\li900\nowidctlpar\tx900\adjustright {a.)  \tab Will operation be reliable?  Assume further interrupts are disabled for the duration of each interrupt service routine.  Explain your answer.
\par }\pard \nowidctlpar\adjustright {
\par }\pard \fi-360\li900\nowidctlpar\adjustright {b.) \tab If the mainline routine is to be permitted to include critical regions, during which interrupts are temporarily turned off, then how long can these last and still maintain reliable operation?  
\par 
\par c.) \tab For case (a), given critical regions of no longer than 13 \'b5s, then how much could T}{\dn5 1}{ be lengthened and still ensure reliable operation.  
\par 
\par d.) \tab If the T}{\dn5 Pi}{ times were actually average times instead of minimum times between the interrupts, then for case (a), what percentage of CPU time is available to the mainline routine, on the average?  
\par }\pard \nowidctlpar\adjustright {
\par }\pard \fi-540\li540\nowidctlpar\adjustright {3.19 \tab }{\b Critical Regions}{
.  It is of paramount importance to be able to disable interrupts to protect critical regions in our code.  Consider, for example, the common technique for changing a bit on an output port while leaving the other bits unchanged.  We can read the port (eve
n though it is an output port) into an accumulator.  Then we can force the selected bit (e.g., bit 5) to 1 with an OR instruction      (leaving the other bits unchanged).  Finally, we can write the result back out to the port.  
\par }\pard \nowidctlpar\adjustright {
\par }\pard \fi-360\li900\nowidctlpar\adjustright {a.)  Assuming that there is
 an interrupt service routine which changes bit 3 on this same port when it is called, why should interrupts be disabled for the above operation which is intended to change bit five?  To answer this, describe a scenario which leads to a malfunction.  

\par 
\par b.)  How often is such an error likely to recur if bit 3 is changed once per millisecond, with the three      instructions taking 1 \'b5
s each, and if bit 5 is changed once every 10 ms or so?  Assume that the two events are not synchronized to each other, but that at least one of them occurs in response to an unsynchronized, external event. 
\par 
\par c.)  Is there any benefit to be had in an instruction which sets (or clears or toggles) selected bits of a port }{\i directly}{?  Explain.  (Not all microcontrollers have such a
n instruction, but some do, including both the Motorola 68HC11 and the Intel 8096.)  
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par }\pard \nowidctlpar\adjustright {These problems are from Peatman, John B, }{\i Design With Microcontrollers}{, McGraw Hill, 1988.
\par 
\par }}